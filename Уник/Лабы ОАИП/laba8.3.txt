#include <iostream>
#include <cmath>

using namespace std;

// Функция, для которой мы вычисляем интеграл
double f(double x) {
    return log(x) - 5 * cos(x);
}

// Функция для вычисления интеграла методом Симпсона с заданным количеством разбиений n
double simpsonMethodByPartition(double a, double b, int n) {
    double h = (b - a) / n;
    double sum = f(a) + f(b);
    double x;

    for (int i = 1; i < n; i++) {
        x = a + i * h;
        sum += i % 2 == 0 ? 2 * f(x) : 4 * f(x);
    }

    return sum * h / 3;
}

// Функция для вычисления интеграла методом Симпсона с заданной точностью epsilon
double simpsonMethodByAccuracy(double a, double b, double epsilon) {
    int n = 2;
    double prevIntegral = 0;
    double currentIntegral = simpsonMethodByPartition(a, b, n);

    while (abs(currentIntegral - prevIntegral) > epsilon) {
        prevIntegral = currentIntegral;
        n *= 2;
        currentIntegral = simpsonMethodByPartition(a, b, n);
    }

    return currentIntegral;
}

int main() {
    setlocale(LC_ALL, "Russian");
    double a, b;
    int n;
    double epsilon;

    cout << "Введите начало интервала a: ";
    cin >> a;
    cout << "Введите конец интервала b: ";
    cin >> b;

    cout << "Вычисление интеграла функции f(x) = ln(x) - 5cos(x)" << endl;

    cout << "Метод Симпсона с заданным количеством разбиений n" << endl;
    cout << "Введите количество разбиений n: ";
    cin >> n;
    double integralByPartition = simpsonMethodByPartition(a, b, n);
    cout << "Значение интеграла: " << integralByPartition << endl;

    cout << "Метод Симпсона с заданной точностью epsilon" << endl;
    cout << "Введите точность epsilon: ";
    cin >> epsilon;
    double integralByAccuracy = simpsonMethodByAccuracy(a, b, epsilon);
    cout << "Значение интеграла: " << integralByAccuracy << endl;

    return 0;
}
